{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ExploreS3"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/GeoFlow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "GeoBlobDest",
								"type": "DatasetReference"
							},
							"name": "GeoData"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "GeoFull",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string,\n\t\tColumn_5 as string,\n\t\tColumn_6 as string,\n\t\tColumn_7 as string,\n\t\tColumn_8 as string,\n\t\tColumn_9 as string,\n\t\tColumn_10 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tlimit: 100,\n\trowUrlColumn: 'sourcefilename',\n\twildcardPaths:['output/Data/CSV/*.csv']) ~> GeoData\nGeoData sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\ttruncate: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PricePaid')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "GeoBlobDest",
								"type": "DatasetReference"
							},
							"name": "GeoPostCodes"
						},
						{
							"dataset": {
								"referenceName": "CompanyDataBlob",
								"type": "DatasetReference"
							},
							"name": "Companies"
						},
						{
							"dataset": {
								"referenceName": "PPaid_parquet",
								"type": "DatasetReference"
							},
							"name": "PricePaidPropertyData"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "finaloutput",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "GeoData"
						},
						{
							"name": "Join1"
						},
						{
							"name": "Join2"
						},
						{
							"name": "Aggregate2"
						}
					],
					"script": "source(output(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string,\n\t\tColumn_5 as string,\n\t\tColumn_6 as string,\n\t\tColumn_7 as string,\n\t\tColumn_8 as string,\n\t\tColumn_9 as string,\n\t\tColumn_10 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\twildcardPaths:['output/Data/CSV/*.csv']) ~> GeoPostCodes\nsource(output(\n\t\tCompanyName as string,\n\t\tCompanyNumber as string,\n\t\t{RegAddress.CareOf} as string,\n\t\t{RegAddress.POBox} as string,\n\t\t{RegAddress.AddressLine1} as string,\n\t\t{RegAddress.AddressLine2} as string,\n\t\t{RegAddress.PostTown} as string,\n\t\t{RegAddress.County} as string,\n\t\t{RegAddress.Country} as string,\n\t\t{RegAddress.PostCode} as string,\n\t\tCompanyCategory as string,\n\t\tCompanyStatus as string,\n\t\tCountryOfOrigin as string,\n\t\tDissolutionDate as string,\n\t\tIncorporationDate as string,\n\t\t{Accounts.AccountRefDay} as string,\n\t\t{Accounts.AccountRefMonth} as string,\n\t\t{Accounts.NextDueDate} as string,\n\t\t{Accounts.LastMadeUpDate} as string,\n\t\t{Accounts.AccountCategory} as string,\n\t\t{Returns.NextDueDate} as string,\n\t\t{Returns.LastMadeUpDate} as string,\n\t\t{Mortgages.NumMortCharges} as string,\n\t\t{Mortgages.NumMortOutstanding} as string,\n\t\t{Mortgages.NumMortPartSatisfied} as string,\n\t\t{Mortgages.NumMortSatisfied} as string,\n\t\t{SICCode.SicText_1} as string,\n\t\t{SICCode.SicText_2} as string,\n\t\t{SICCode.SicText_3} as string,\n\t\t{SICCode.SicText_4} as string,\n\t\t{LimitedPartnerships.NumGenPartners} as string,\n\t\t{LimitedPartnerships.NumLimPartners} as string,\n\t\tURI as string,\n\t\t{PreviousName_1.CONDATE} as string,\n\t\t{PreviousName_1.CompanyName} as string,\n\t\t{PreviousName_2.CONDATE} as string,\n\t\t{PreviousName_2.CompanyName} as string,\n\t\t{PreviousName_3.CONDATE} as string,\n\t\t{PreviousName_3.CompanyName} as string,\n\t\t{PreviousName_4.CONDATE} as string,\n\t\t{PreviousName_4.CompanyName} as string,\n\t\t{PreviousName_5.CONDATE} as string,\n\t\t{PreviousName_5.CompanyName} as string,\n\t\t{PreviousName_6.CONDATE} as string,\n\t\t{PreviousName_6.CompanyName} as string,\n\t\t{PreviousName_7.CONDATE} as string,\n\t\t{PreviousName_7.CompanyName} as string,\n\t\t{PreviousName_8.CONDATE} as string,\n\t\t{PreviousName_8.CompanyName} as string,\n\t\t{PreviousName_9.CONDATE} as string,\n\t\t{PreviousName_9.CompanyName} as string,\n\t\t{PreviousName_10.CONDATE} as string,\n\t\t{PreviousName_10.CompanyName} as string,\n\t\tConfStmtNextDueDate as string,\n\t\tConfStmtLastMadeUpDate as string,\n\t\tFilename as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> Companies\nsource(output(\n\t\tTransactionUniqueIdentifier as string,\n\t\tPrice as string,\n\t\tDateofTransfer as string,\n\t\tPostcode as string,\n\t\tPropertyType as string,\n\t\tOldNew as string,\n\t\tDuration as string,\n\t\tPAON as string,\n\t\tSOAN as string,\n\t\tStreet as string,\n\t\tLocality as string,\n\t\tTownCity as string,\n\t\tDistrict as string,\n\t\tCounty as string,\n\t\tPPDCategoryType as string,\n\t\tRecordStatusMonthly as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> PricePaidPropertyData\nGeoPostCodes select(mapColumn(\n\t\tPostcode = Column_1,\n\t\tPositional_quality_indicator = Column_2,\n\t\tEastings = Column_3,\n\t\tNorthings = Column_4,\n\t\tCountry_code = Column_5,\n\t\tNHS_regional_HA_code = Column_6,\n\t\tNHS_HA_code = Column_7,\n\t\tAdmin_county_code = Column_8,\n\t\tAdmin_district_code = Column_9,\n\t\tAdmin_ward_code = Column_10\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> GeoData\nGeoData, Companies join(Postcode == {RegAddress.PostCode},\n\tjoinType:'left',\n\tbroadcast: 'left')~> Join1\nJoin1, PricePaidPropertyData join(GeoData@Postcode == PricePaidPropertyData@Postcode,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join2\nJoin2 aggregate(groupBy(Country_code,\n\t\tGeoData@Postcode),\n\tCompanyCount = countDistinct(CompanyNumber),\n\t\tPropertyTransCount = countDistinct(TransactionUniqueIdentifier),\n\t\tAvgPropertyPrice = avgIf(!isNull(Price), toDouble(Price))) ~> Aggregate2\nAggregate2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['PostcodeOutput.txt'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProcessData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Post code Aggregation",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "PricePaid",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"GeoPostCodes": {},
									"Companies": {},
									"PricePaidPropertyData": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/PricePaid')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TransformGeo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dataflow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "GeoFlow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"GeoData": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/GeoFlow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "ProcessData",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2020-09-14T16:52:00.000Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ProcessData')]"
			]
		}
	]
}